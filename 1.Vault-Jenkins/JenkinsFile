pipeline {
    agent any

    environment {
        VAULT_ADDR = 'http://vault-new:8200' 
        SECRET_PATH = 'v1/secret/aws/data/aws/jenkins' 
    }

    stages {
        stage('Fetch AWS Secret from Vault') {
            steps {
                withCredentials([string(credentialsId: 'vault-token', variable: 'VAULT_TOKEN')]) {
                    script {
                        
                        def apiUrl = "${VAULT_ADDR}/${SECRET_PATH}"
                        def response = sh(script: """
                            curl -s --header "X-Vault-Token: \$VAULT_TOKEN" --request GET "${apiUrl}"
                        """, returnStdout: true).trim()

                        
                        def jsonSlurper = new groovy.json.JsonSlurper()
                        def jsonResponse = jsonSlurper.parseText(response)

                        def awsAccessKeyId = jsonResponse.data.data.access_key_id
                        def awsSecretAccessKey = jsonResponse.data.data.secret_access_key

                        env.AWS_ACCESS_KEY_ID = awsAccessKeyId
                        env.AWS_SECRET_ACCESS_KEY = awsSecretAccessKey
                    }
                }
            }
        }

        stage('Use AWS CLI') {
            steps {
                withEnv(["AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY", "AWS_DEFAULT_REGION=il-central-1"]) {
                    script {
                       
                        sh """
                            aws ec2 describe-instances --region il-central-1 --query "Reservations[].Instances[].[InstanceId,Tags[?Key=='Name'].Value|[0]]" --output table
                        """
                    }
                }
            }
        }
    }
}

